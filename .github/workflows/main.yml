# .github/workflows/deploy.yml
# 🚀 Pipeline de CI/CD para despliegue local con un Self-Hosted Runner (sin BD)

name: Deploy Locally with Self-Hosted Runner

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: # Permite ejecutar el pipeline manualmente

env:
  DOCKER_PROJECT_NAME: 'examen'
  APP_CONTAINER_NAME: 'product_app_2025'
  # Ya no necesitas las variables de base de datos

jobs:
  build-and-deploy:
    name: Build and Deploy Locally
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B clean package -DskipTests

      - name: Deploy with Docker Compose
        run: |
          echo "✅ Iniciando despliegue en el runner local..."
          # Navegamos a la carpeta que contiene el docker-compose.yml
          cd docker

          echo "🧹 Limpiando despliegue anterior (si existe)..."
          docker compose -p ${{ env.DOCKER_PROJECT_NAME }} down -v --remove-orphans || echo "⚠️ No se encontró un despliegue anterior."

          echo "🏗️ Construyendo y levantando los servicios..."
          docker compose -p ${{ env.DOCKER_PROJECT_NAME }} up -d --build

          # Ya no es necesario esperar por la base de datos ni ejecutar init.sql

          echo "🔍 Verificando estado de los contenedores..."
          docker compose -p ${{ env.DOCKER_PROJECT_NAME }} ps

          echo "🗒️ Últimos logs de la aplicación:"
          docker logs --tail 100 ${{ env.APP_CONTAINER_NAME }}

          echo "🎉 ✓ Despliegue local completado exitosamente."
